<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myblog.service.web.mapper.BlogMapper">
    <update id="changeLike">
        UPDATE t_blog SET like_count = #{likeCount} WHERE id=#{blogId};
    </update>
    <select id="selectCountGroupByBlogSort" resultType="java.util.Map">
        SELECT t.blog_sort_id, COUNT(t.id) AS blogNum FROM t_blog t WHERE t.is_deleted= 0 GROUP BY t.blog_sort_id;
    </select>
    <select id="selectTagByBlogId" resultType="com.myblog.service.web.entity.Tag">
        SELECT t3.id, t3.tag_name FROM t_blog t1
        INNER JOIN t_blog_tag t2 ON t1.id=t2.blog_id
        INNER JOIN t_tag t3 ON t2.tag_id=t3.id
        <foreach collection="blogs" open="(" close=")" separator="," item="blog">
            #{blog.id}
        </foreach>
    </select>
    <select id="selectBlogNumByMouth" resultType="com.myblog.service.web.entity.dto.ArchiveDto">
        SELECT date_format(create_time,'%Y-%m') AS month, COUNT(*) AS blogNum FROM t_blog WHERE is_deleted = 0 GROUP BY date_format(create_time,'%Y-%m')
    </select>
    <select id="selectArchivesByYear" resultType="com.myblog.service.web.entity.dto.ArchiveDto">
        SELECT t.id, t.title, t.file_id, DATE_FORMAT(t.create_time, '%Y') AS year, t.create_time FROM t_blog t
        WHERE t.is_deleted = 0 ORDER BY t.create_time LIMIT #{page}, #{size};
    </select>

    <select id="selectArchivesByMonth" resultType="com.myblog.service.web.entity.dto.ArchiveDto">
        SELECT t.id, t.title, t.file_id, DATE_FORMAT(t.create_time, '%Y-%m') AS month, t.create_time FROM t_blog t
        WHERE t.is_deleted = 0 AND DATE_FORMAT(t.create_time, '%Y-%m') = #{filter} ORDER BY t.create_time LIMIT #{page}, #{size};
    </select>
    <select id="selectBlogByRequest" resultType="com.myblog.service.web.entity.Blog">
        SELECT t1.id, t1.title, t1.summary, t1.content, t1.click_count,
        t1.like_count, t1.file_id, t1.create_time, t1.update_time, t1.admin_id, t1.author, t1.blog_sort_id, t1.is_deleted
        FROM t_blog t1
        <choose>
            <when test="tagId!=null">
                LEFT JOIN t_blog_tag t2
                ON t1.id = t2.blog_id
                WHERE t2.tag_id = #{tagId,jdbcType=VARCHAR}
            </when>
            <otherwise>
                WHERE 1=1
            </otherwise>
        </choose>

        AND t1.is_deleted = 0
        <if test="blogSortId != null">
            AND t1.blog_sort_id = #{blogSortId,jdbcType=TINYINT}
        </if>
        ORDER BY t1.create_time DESC
        LIMIT #{page,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </select>
    <select id="selectBlogCountByRequest" resultType="java.lang.Integer">
        SELECT COUNT(t1.id)
        FROM t_blog t1
        <choose>
            <when test="tagId!=null">
                LEFT JOIN t_blog_tag t2
                ON t1.id = t2.blog_id
                WHERE t2.tag_id = #{tagId,jdbcType=VARCHAR}
            </when>
            <otherwise>
                WHERE 1=1
            </otherwise>
        </choose>

        AND t1.is_deleted = 0
        <if test="blogSortId != null">
            AND t1.blog_sort_id = #{blogSortId,jdbcType=TINYINT}
        </if>
    </select>
</mapper>
